{"version":3,"sources":["components/media/AsmaaQuoteLogo.png","components/media/categories.js","components/AsmaaQuoteMenu.js","components/AsmaaQuoteComponent.js","components/firebase/config.js","components/AsmaaQuoteContent.js","components/AsmaaQuoteMain.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Categories","Header","Layout","AsmaaQuoteMenu","props","showDrawer","setState","visible","onClose","state","console","log","length","style","position","zIndex","width","href","target","alt","src","Logo","height","theme","mode","defaultSelectedKeys","this","selected","toString","lineHeight","float","id","map","item","key","Item","to","name","className","type","onClick","title","placement","closable","Component","Meta","Card","AsmaaQuoteComponent","avatar","category","icon","fontSize","color","description","quote","author","process","db","Firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","Content","AsmaaQuoteContent","fetchData","quotes","collection","where","get","then","data","forEach","catch","error","padding","marginTop","gutter","xs","sm","md","lg","xl","content","Footer","AsmaaQuoteMain","textAlign","App","dotenv","config","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"qGAAAA,EAAOC,QAAU,IAA0B,4C,uPCqB3BC,EArBG,CAAC,aAEZ,KAAQ,WACR,MAAS,UACT,KAAQ,UAJG,QAKF,WALE,aAQX,KAAQ,OACR,MAAS,UACT,KAAQ,SAVG,QAWF,WAXE,aAcX,KAAQ,aACR,MAAS,UACT,KAAQ,QAhBG,QAiBF,Y,0BCNTC,EAAWC,IAAXD,OAuFOE,E,YApFb,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KAMRC,WAAa,WACX,EAAKC,SAAS,CACZC,SAAS,KATM,EAanBC,QAAU,WACR,EAAKF,SAAS,CACZC,SAAS,KAbX,EAAKE,MAAQ,CACXF,SAAS,GAHM,E,sEAmBT,IAAD,OAEP,OADAG,QAAQC,IAAIX,EAAWY,QAErB,kBAACX,EAAD,CAAQY,MAAO,CAAEC,SAAU,QAASC,OAAQ,EAAGC,MAAO,SACpD,uBAAGC,KAAK,6CAA6CC,OAAO,UAC1D,yBAAKC,IAAI,iBAAiBC,IAAKC,IAAMR,MAAO,CAAES,OAAQ,WAGxD,kBAAC,IAAD,CACEC,MAAM,OACNC,KAAK,aACLC,oBAAqBC,KAAKtB,MAAMuB,SAASC,WACzCf,MAAO,CAAEgB,WAAY,OAAQC,MAAO,SACpCC,GAAG,YAEF/B,EAAWgC,KAAI,SAACC,EAAMC,GACrB,OACE,kBAAC,IAAKC,KAAN,CAAWD,IAAKA,GACd,kBAAC,IAAD,CAAME,GAAI,IAAMH,EAAKI,MAArB,IAA6BJ,EAAKI,UAIxC,kBAAC,IAAKF,KAAN,CAAWD,IAAKlC,EAAWY,OAAS,GAClC,kBAAC,IAAD,CAAMwB,GAAI,UAAV,WAIJ,kBAAC,IAAD,CACEb,MAAM,OACNC,KAAK,aACLC,oBAAqB,CAAC,KACtBZ,MAAO,CAAEiB,MAAO,SAChBC,GAAG,cAEH,kBAAC,IAAD,CAAQO,UAAU,WAAWC,KAAK,UAAUC,QAASd,KAAKrB,YACxD,kBAAC,IAAD,CAAMkC,KAAK,mBAIf,kBAAC,IAAD,CACEE,MAAM,cACNC,UAAU,MACVC,UAAU,EACVnC,QAASkB,KAAKlB,QACdD,QAASmB,KAAKjB,MAAMF,SAEpB,6BACGP,EAAWgC,KAAI,SAACC,EAAMC,GACrB,OACE,kBAAC,IAAD,CAAME,GAAI,IAAMH,EAAKI,KAAMG,QAAS,EAAKhC,SACtC,IACD,2BAAIyB,EAAKI,UAIf,kBAAC,IAAD,CAAMD,GAAG,SAASI,QAASd,KAAKlB,SAC9B,4C,GA5EeoC,a,oDCNrBC,EAASC,IAATD,KAmCOE,E,YAhCb,WAAY3C,GAAQ,qEACZA,I,sEAKN,OACE,kBAAC,IAAD,CAAMS,MAAO,CAAES,OAAQ,SACrB,kBAACuB,EAAD,CACEJ,MAAOf,KAAKtB,MAAMqC,MAClBO,OACE,kBAAC,IAAD,CACET,KAAMb,KAAKtB,MAAM6C,SAASC,KAC1BrC,MAAO,CAAEsC,SAAU,GAAIC,MAAO1B,KAAKtB,MAAM6C,SAASG,SAGtDC,YACE,6BACE,4CACA,kBAAC,IAAD,KAAM3B,KAAKtB,MAAM6C,SAASZ,SAKhC,kBAAC,IAAD,MACA,uBAAGxB,MAAO,CAAEsC,SAAU,UAAYzB,KAAKtB,MAAMkD,OAC7C,kBAAC,IAAD,CAASzC,MAAO,CAAEsC,SAAU,YAAczB,KAAKtB,MAAMmD,a,GA3B3BX,a,kBCElClC,QAAQC,IAAI6C,6bACZ,IACaC,EADHC,IAASC,cAXJ,CACXC,OAAQJ,0CACRK,WAAYL,6BACZM,YAAaN,oCACbO,UAAWP,aACXQ,cAAeR,yBACfS,kBAAmBT,cACnBU,MAAOV,2CACPW,cAAeX,iBAIGY,YCJdC,EAAYnE,IAAZmE,QA2DOC,E,YAxDb,WAAYlE,GAAQ,IAAD,8BACjB,4CAAMA,KAURmE,UAAY,WACV,EAAKjE,SAAS,CAAEkE,OAAQ,KAAM,WAC5Bf,EAAGgB,WAAW,UACXC,MAAM,WAAY,KAAM,EAAKtE,MAAM6C,SAASZ,MAC5CsC,MACAC,MAAK,SAAAC,GACJA,EAAKC,SAAQ,SAAA7C,GACX,EAAK3B,SAAS,CAAEkE,OAAO,GAAD,mBAAM,EAAK/D,MAAM+D,QAAjB,CAAyBvC,EAAK4C,iBAGvDE,OAAM,SAAAC,GACLtE,QAAQC,IAAIqE,UApBlB,EAAKvE,MAAQ,CACX+D,OAAQ,IAHO,E,iFAQjB9C,KAAK6C,c,+BAmBG,IAAD,OACP,OACE,kBAACF,EAAD,CAASxD,MAAO,CAAEoE,QAAS,YAAaC,UAAW,KACjD,kBAAC,IAAD,CAAKC,OAAQ,GAAI5C,KAAK,QACnBb,KAAKjB,MAAM+D,OAAOxC,KAAI,SAACC,EAAMC,GAC5B,OACE,kBAAC,IAAD,CACEkD,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,EACJC,GAAI,EACJ3E,MAAO,CAAEqE,UAAW,KAEpB,kBAAC,EAAD,CACEzC,MAAOR,EAAKQ,MACZQ,SAAU,EAAK7C,MAAM6C,SACrBK,MAAOrB,EAAKwD,QACZlC,OAAQtB,EAAKsB,mB,GA9CCX,aCDxB8C,EAAWxF,IAAXwF,OAyBOC,E,YAtBb,WAAYvF,GAAQ,qEACZA,I,sEAIN,OACE,6BACE,kBAAC,IAAD,CAAQkC,UAAU,UAChB,kBAAC,EAAD,CAAgBX,SAAUD,KAAKtB,MAAMuB,WACrC,kBAAC,EAAD,CAAmBsB,SAAUvB,KAAKtB,MAAM6C,WACxC,kBAACyC,EAAD,CAAQ7E,MAAO,CAAE+E,UAAW,WAA5B,kDAC0C,IACxC,uBAAG3E,KAAK,4CAA4CC,OAAO,UAA3D,wB,GAbiB0B,a,0BCwBdiD,MA/Bf,WAEE,OADAC,IAAOC,SAEL,kBAAC,IAAD,KACE,kBAAC,IAAD,KACG/F,EAAWgC,KAAI,SAACC,EAAMC,GACrB,OACE,kBAAC,IAAD,CACE8D,KAAM,IAAM/D,EAAKI,KACjB4D,UAAW,kBACT,kBAAC,EAAD,CAAgBhD,SAAUhB,EAAMN,SAAUO,UAMlD,kBAAC,IAAD,CACE8D,KAAK,SACLC,UAAW,kBACT,kBAAC,EAAD,CAAgBhD,SAAUjD,EAAW,GAAI2B,SAAU3B,EAAWY,OAAO,OAGzE,kBAAC,IAAD,CACEoF,KAAK,IACLC,UAAW,kBAAM,kBAAC,EAAD,CAAgBhD,SAAUjD,EAAW,GAAI2B,SAAU,UCjB1DuE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAET,kBAAC,EAAD,MACEC,SAASC,eAAe,SD0HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMjC,MAAK,SAAAkC,GACjCA,EAAaC,kB","file":"static/js/main.106473ad.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/AsmaaQuoteLogo.ddc725ed.png\";","const Categories = [\r\n    {\r\n        'name': 'MyQuotes',\r\n        'color': '#FFFFFF',\r\n        'icon': 'coffee',\r\n        'color': '#ff1a75'\r\n    },\r\n    {\r\n        'name': 'Life',\r\n        'color': '#FFFFFF',\r\n        'icon': 'heart',\r\n        'color': '#c61aff'\r\n    },\r\n    {\r\n        'name': 'Motivation',\r\n        'color': '#FFFFFF',\r\n        'icon': 'star',\r\n        'color': '#1890FF'\r\n    }\r\n ];\r\n\r\n export default Categories;","/* \r\n  author: Asmaa Mirkhan ~ 2019\r\n*/\r\n\r\nimport React, { Component } from \"react\";\r\nimport { Layout, Menu, Drawer, Button, Icon } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\nimport Categories from \"./media/categories\";\r\nimport Logo from \"./media/AsmaaQuoteLogo.png\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst { Header } = Layout;\r\n\r\nclass AsmaaQuoteMenu extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      visible: false\r\n    };\r\n  }\r\n\r\n  showDrawer = () => {\r\n    this.setState({\r\n      visible: true\r\n    });\r\n  };\r\n\r\n  onClose = () => {\r\n    this.setState({\r\n      visible: false\r\n    });\r\n  };\r\n\r\n  render() {\r\n    console.log(Categories.length);\r\n    return (\r\n      <Header style={{ position: \"fixed\", zIndex: 1, width: \"100%\" }}>\r\n        <a href=\"https://github.com/asmaamirkhan/AsmaaQuote\" target=\"_blank\">\r\n          <img alt=\"AsmaaQuoteLogo\" src={Logo} style={{ height: \"40px\" }} />\r\n        </a>\r\n\r\n        <Menu\r\n          theme=\"dark\"\r\n          mode=\"horizontal\"\r\n          defaultSelectedKeys={this.props.selected.toString()}\r\n          style={{ lineHeight: \"64px\", float: \"right\" }}\r\n          id=\"mainmenu\"\r\n        >\r\n          {Categories.map((item, key) => {\r\n            return (\r\n              <Menu.Item key={key}>\r\n                <Link to={\"/\" + item.name}> {item.name}</Link>\r\n              </Menu.Item>\r\n            );\r\n          })}\r\n          <Menu.Item key={Categories.length + 1}>\r\n            <Link to={\"/About\"}>About</Link>\r\n          </Menu.Item>\r\n        </Menu>\r\n\r\n        <Menu\r\n          theme=\"dark\"\r\n          mode=\"horizontal\"\r\n          defaultSelectedKeys={[\"0\"]}\r\n          style={{ float: \"right\" }}\r\n          id=\"togglemenu\"\r\n        >\r\n          <Button className=\"barsMenu\" type=\"default\" onClick={this.showDrawer}>\r\n            <Icon type=\"align-center\" />\r\n          </Button>\r\n        </Menu>\r\n\r\n        <Drawer\r\n          title=\"Asmaa Quote\"\r\n          placement=\"top\"\r\n          closable={true}\r\n          onClose={this.onClose}\r\n          visible={this.state.visible}\r\n        >\r\n          <div>\r\n            {Categories.map((item, key) => {\r\n              return (\r\n                <Link to={\"/\" + item.name} onClick={this.onClose}>\r\n                  {\" \"}\r\n                  <p>{item.name}</p>\r\n                </Link>\r\n              );\r\n            })}\r\n            <Link to=\"/About\" onClick={this.onClose}>\r\n              <p>About</p>\r\n            </Link>\r\n          </div>\r\n        </Drawer>\r\n      </Header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AsmaaQuoteMenu;\r\n","/* \r\n  author: Asmaa Mirkhan ~ 2019\r\n*/\r\n\r\nimport React, { Component } from \"react\";\r\nimport { Card, Divider, Tag, Icon } from \"antd\";\r\n\r\nconst { Meta } = Card;\r\n\r\nclass AsmaaQuoteComponent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Card style={{ height: \"100%\" }}>\r\n        <Meta\r\n          title={this.props.title}\r\n          avatar={\r\n            <Icon\r\n              type={this.props.category.icon}\r\n              style={{ fontSize: 45, color: this.props.category.color }}\r\n            />\r\n          }\r\n          description={\r\n            <div>\r\n              <spam>Category: </spam>\r\n              <Tag>{this.props.category.name}</Tag>\r\n            </div>\r\n          }\r\n        />\r\n\r\n        <Divider />\r\n        <p style={{ fontSize: \"large\" }}>{this.props.quote}</p>\r\n        <Divider style={{ fontSize: \"x-small\" }}>{this.props.author}</Divider>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AsmaaQuoteComponent;\r\n","import Firebase from 'firebase';\r\nconst config = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_APP_ID,\r\n    measurementId: process.env.REACT_APP_MEASUREMENT_ID\r\n};\r\nconsole.log(process.env)\r\nlet app = Firebase.initializeApp(config);\r\nexport const db = app.firestore();","/* \r\n  author: Asmaa Mirkhan ~ 2019\r\n*/\r\n\r\nimport React, { Component } from \"react\";\r\nimport { Layout, Col, Row } from \"antd\";\r\nimport AsmaaQuoteComponent from \"./AsmaaQuoteComponent\";\r\nimport { db } from \"./firebase/config\";\r\n\r\nconst { Content } = Layout;\r\n\r\nclass AsmaaQuoteContent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      quotes: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchData();\r\n  }\r\n\r\n  fetchData = () => {\r\n    this.setState({ quotes: [] }, () => {\r\n      db.collection(\"quotes\")\r\n        .where(\"category\", \"==\", this.props.category.name)\r\n        .get()\r\n        .then(data => {\r\n          data.forEach(item => {\r\n            this.setState({ quotes: [...this.state.quotes, item.data()] });\r\n          });\r\n        })\r\n        .catch(error => {\r\n          console.log(error);\r\n        });\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Content style={{ padding: \"10px 25px\", marginTop: 64 }}>\r\n        <Row gutter={12} type=\"flex\">\r\n          {this.state.quotes.map((item, key) => {\r\n            return (\r\n              <Col\r\n                xs={24}\r\n                sm={12}\r\n                md={12}\r\n                lg={8}\r\n                xl={6}\r\n                style={{ marginTop: 16 }}\r\n              >\r\n                <AsmaaQuoteComponent\r\n                  title={item.title}\r\n                  category={this.props.category}\r\n                  quote={item.content}\r\n                  author={item.author}\r\n                />\r\n              </Col>\r\n            );\r\n          })}\r\n        </Row>\r\n      </Content>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AsmaaQuoteContent;\r\n","/* \r\n  author: Asmaa Mirkhan ~ 2019\r\n*/\r\n\r\nimport React, { Component } from \"react\";\r\nimport AsmaaQuoteMenu from \"./AsmaaQuoteMenu\";\r\nimport AsmaaQuoteContent from \"./AsmaaQuoteContent\";\r\nimport { Layout } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\n\r\nconst { Footer } = Layout;\r\n\r\nclass AsmaaQuoteMain extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Layout className=\"layout\">\r\n          <AsmaaQuoteMenu selected={this.props.selected} />\r\n          <AsmaaQuoteContent category={this.props.category} />\r\n          <Footer style={{ textAlign: \"center\" }}>\r\n            AsmaaQuote Project ©2019 Made with ❤ by{\" \"}\r\n            <a href=\"https://www.linkedin.com/in/asmaamirkhan/\" target=\"_blank\">\r\n              Asmaa Mirkhan\r\n            </a>\r\n          </Footer>\r\n        </Layout>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AsmaaQuoteMain;\r\n","import React from \"react\";\r\nimport AsmaaQuoteMain from \"./components/AsmaaQuoteMain\";\r\nimport { HashRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport Categories from \"./components/media/categories\";\r\nimport dotenv from 'dotenv';\r\nfunction App() {\r\n  dotenv.config()\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        {Categories.map((item, key) => {\r\n          return (\r\n            <Route\r\n              path={\"/\" + item.name}\r\n              component={() => (\r\n                <AsmaaQuoteMain category={item} selected={key} />\r\n              )}\r\n            />\r\n          );\r\n        })}\r\n\r\n        <Route\r\n          path=\"/About\"\r\n          component={() => (\r\n            <AsmaaQuoteMain category={Categories[0]} selected={Categories.length+1} />\r\n          )}\r\n        />\r\n        <Route\r\n          path=\"/\"\r\n          component={() => <AsmaaQuoteMain category={Categories[0]} selected={0} />}\r\n        />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n\r\n<App />\r\n, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}